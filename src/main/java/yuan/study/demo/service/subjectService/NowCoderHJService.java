package yuan.study.demo.service.subjectService;


public interface NowCoderHJService {

    /**
     * 描述
     * 明明生成了N个1到500之间的随机整数。请你删去其中重复的数字，即相同的数字只保留一个，把其余相同的数去掉，然后再把这些数从小到大排序，按照排好的顺序输出。
     *
     * 数据范围：1≤n≤1000  ，输入的数字大小满足1≤val≤500
     *
     * 输入描述：
     * 第一行先输入随机整数的个数 N 。 接下来的 N 行每行输入一个整数，代表明明生成的随机数。 具体格式可以参考下面的"示例"。
     *
     * 输出描述：
     * 输出多行，表示输入数据处理后的结果
     *
     * 示例1
     * 输入：
     * 3
     * 2
     * 2
     * 1
     * 输出：
     * 1
     * 2
     *
     * 说明：
     * 输入解释：
     * 第一个数字是3，也即这个小样例的N=3，说明用计算机生成了3个1到500之间的随机整数，接下来每行一个随机数字，共3行，也即这3个随机数字为：
     * 2
     * 2
     * 1
     * 所以样例的输出为：
     * 1
     * 2
     */
    void randomNumber() throws Exception;

    /**
     * 描述
     * 写出一个程序，接受一个十六进制的数，输出该数值的十进制表示。
     *
     * 数据范围：保证结果在1≤n≤2³¹ −1
     *
     * 输入描述：
     * 输入一个十六进制的数值字符串。
     *
     * 输出描述：
     * 输出该数值的十进制字符串。不同组的测试用例用\n隔开。
     *
     * 示例1
     * 输入：
     * 0xAA
     * 输出：
     * 170
     */
    void decimalConversion() throws Exception;

    /**
     * 描述
     * 请解析IP地址和对应的掩码，进行分类识别。要求按照A/B/C/D/E类地址归类，不合法的地址和掩码单独归类。
     * 所有的IP地址划分为 A,B,C,D,E五类
     * A类地址从1.0.0.0到126.255.255.255;
     * B类地址从128.0.0.0到191.255.255.255;
     * C类地址从192.0.0.0到223.255.255.255;
     * D类地址从224.0.0.0到239.255.255.255；
     * E类地址从240.0.0.0到255.255.255.255
     *
     * 私网IP范围是：
     * 从10.0.0.0到10.255.255.255
     * 从172.16.0.0到172.31.255.255
     * 从192.168.0.0到192.168.255.255
     *
     * 子网掩码为二进制下前面是连续的1，然后全是0。（例如：255.255.255.32就是一个非法的掩码）
     * （注意二进制下全是1或者全是0均为非法子网掩码）
     *
     * 注意：
     * 1. 类似于【0.*.*.*】和【127.*.*.*】的IP地址不属于上述输入的任意一类，也不属于不合法ip地址，计数时请忽略
     * 2. 私有IP地址和A,B,C,D,E类地址是不冲突的
     *
     * 输入描述：
     * 多行字符串。每行一个IP地址和掩码，用~隔开。
     * 请参考帖子https://www.nowcoder.com/discuss/276处理循环输入的问题。
     *
     * 输出描述：
     * 统计A、B、C、D、E、错误IP地址或错误掩码、私有IP的个数，之间以空格隔开。
     *
     * 示例1
     * 输入：
     * 10.70.44.68~255.254.255.0
     * 1.0.0.1~255.0.0.0
     * 192.168.0.2~255.255.255.0
     * 19..0.~255.255.255.0
     * 输出：
     * 1 0 1 0 0 2 1
     * 说明：
     * 10.70.44.68~255.254.255.0的子网掩码非法，19..0.~255.255.255.0的IP地址非法，所以错误IP地址或错误掩码的计数为2；
     * 1.0.0.1~255.0.0.0是无误的A类地址；
     * 192.168.0.2~255.255.255.0是无误的C类地址且是私有IP；
     * 所以最终的结果为1 0 1 0 0 2 1
     *
     * 示例2
     * 输入：
     * 0.201.56.50~255.255.111.255
     * 127.201.56.50~255.255.111.255
     * 输出：
     * 0 0 0 0 0 0 0
     * 说明：
     * 类似于【0.*.*.*】和【127.*.*.*】的IP地址不属于上述输入的任意一类，也不属于不合法ip地址，计数时请忽略
     */
    void classificationStatistics() throws Exception;

    /**
     * 描述
     * 某商店规定：三个空汽水瓶可以换一瓶汽水，允许向老板借空汽水瓶（但是必须要归还）。
     * 小张手上有n个空汽水瓶，她想知道自己最多可以喝到多少瓶汽水。
     * 数据范围：输入的正整数满足1≤n≤100
     *
     * 注意：本题存在多组输入。输入的 0 表示输入结束，并不用输出结果。
     * 输入描述：
     * 输入文件最多包含 10 组测试数据，每个数据占一行，仅包含一个正整数 n（ 1<=n<=100 ），表示小张手上的空汽水瓶数。n=0 表示输入结束，你的程序不应当处理这一行。
     *
     * 输出描述：
     * 对于每组测试数据，输出一行，表示最多可以喝的汽水瓶数。如果一瓶也喝不到，输出0。
     *
     * 示例1
     * 输入：
     * 3
     * 10
     * 81
     * 0
     * 输出：
     * 1
     * 5
     * 40
     *
     * 说明：
     * 样例 1 解释：用三个空瓶换一瓶汽水，剩一个空瓶无法继续交换
     * 样例 2 解释：用九个空瓶换三瓶汽水，剩四个空瓶再用三个空瓶换一瓶汽水，剩两个空瓶，向老板借一个空瓶再用三个空瓶换一瓶汽水喝完得一个空瓶还给老板
     */
    void sodaBottle() throws Exception;
}
